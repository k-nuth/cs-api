language: csharp  
sudo: required  
dist: trusty

branches:
  only:
  - dev
  - /^v\d+\.\d+\.\d+$/
  - /^release-\d+\.\d+\.\d+$/
  - /^feature-ci-.+$/
  - /^feature_ci_.+$/

configuration:
- Release

env:  
  - CLI_VERSION=latest

addons:  
  apt:
    packages:
    - gettext
    - libcurl4-openssl-dev
    - libicu-dev
    - libssl-dev
    - libunwind8
    - zlib1g

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.7"


osx: &osx
   os: osx
   language: csharp

mono:
  - latest

dotnet: 2.1.300

matrix:
   include:
      - <<: *linux 
        addons:
          apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - g++-4.9
              - gcc-4.9
        env: UPDATE_DOCS=false MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

      #- <<: *linux
      #  compiler: gcc 
      #  env: UPDATE_DOCS=true

      - <<: *osx
        osx_image: xcode8.3
        env: TRAVIS_PYTHON_VERSION=3.6 PYTHON_FULL_VERSION=3.6.2

before_install:
  - |
    if test "$TRAVIS_OS_NAME" == "osx"; then
      ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/;
      ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/;
    else
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
    fi
    
    git fetch --unshallow # Travis always does a shallow clone, but GitVersion needs the full history including branches and tags
    git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    git fetch origin

install:
  
  - |
    if [[ "${UPDATE_DOCS}" != "true" ]]; then
      # Install Conan    
      if [[ "${TRAVIS_OS_NAME}" != "linux" ]]; then
        brew update || brew update
        brew outdated pyenv || brew upgrade pyenv
        brew install pyenv-virtualenv
        brew install cmake || true
        if which pyenv > /dev/null; then
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)" 
        fi
        pyenv install --list
        pyenv install $PYTHON_FULL_VERSION
        pyenv virtualenv $PYTHON_FULL_VERSION conan
        pyenv rehash
        pyenv activate conan
      fi
      
      pip install --upgrade pip
      pip install conan_package_tools --upgrade
      pip install conan --upgrade
      pip install wheel --upgrade
      pip install twine --upgrade
      conan user
      
    
      if test "$TRAVIS_OS_NAME" != "osx"; then
        # Install .NET Core 2.x
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
        sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
        sudo apt-get update -y
        sudo apt-get install dotnet-sdk-2.0.2 -y
        sudo apt-get install -qq g++-4.9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90
        gcc --version
        g++ --version
        sudo ldconfig

        # Install Mono, only to run cake
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        sudo apt install apt-transport-https
        echo "deb https://download.mono-project.com/repo/ubuntu stable-trusty main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt update
        sudo apt install mono-devel

      fi

    #else
      #Install Moxygen
      #nvm install 8.4.0
      #npm install moxygen -g
      #Install Doxygen 1.8.13
      #wget 'ftp://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.src.tar.gz'
      #tar -xzf doxygen-1.8.13.src.tar.gz
      #cd doxygen-1.8.13
      #mkdir build
      #cd build
      #cmake -G "Unix Makefiles" ..
      #make
      #sudo make install
      #cd ../..
      #doxygen -v
    fi

script:
  - |
    if [[ "${UPDATE_DOCS}" != "true" ]]; then
      
      chmod +x build.sh
      ./build.sh

    #else
      #cd kth/docs
      #doxygen Doxyfile
      #moxygen --anchors ./xml/
      
      #git clone https://github.com/k-nuth/docs.git
      #ls
      #yes | cp -rf api.md ./kth/docs/kth-docs/docs/developer_guide/dotnet/dotnet-interface-details.md

      #cd kth-docs 
      #git checkout master
      
      #git add docs/developer_guide/dotnet/dotnet-interface-details.md
      #git commit -m "Updated Dotnet docs" || :
      #git remote add origin-commit https://${GH_TOKEN}@github.com/k-nuth/docs.git > /dev/null 2>&1
      #git push --quiet --set-upstream origin-commit master  || true
    
    fi
